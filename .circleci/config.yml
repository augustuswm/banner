version: 2.0
jobs:
  mem-build:
    docker:
      - image: clux/muslrust
    steps:
      - checkout
      - run:
          name: Test
          command: cargo test --features mem-backend
      - run:
          name: Build
          command: |
            cargo build --release --features mem-backend
            echo $CIRCLE_SHA1 > .circle-sha
      - run:
          name: Install Node
          command: |
            curl -sL https://deb.nodesource.com/setup_10.x | bash -
            apt-get install -y nodejs
      - run:
          name: Build Frontend
          command: |
            npm install
            npm run build
      - save_cache:
          key: build-{{ .Branch }}-{{ checksum ".circle-sha" }}-mem
          paths:
            - ~/project/www
            - ~/project/target/release
            - ~/project/Dockerfile

  mem-docker:
    docker:
      - image: docker:latest
    steps:
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          key: build-{{ .Branch }}-{{ checksum ".circle-sha" }}-mem
      - setup_remote_docker
      - run:
          command: |
            docker build -t masquerade .
            docker tag masquerade:latest augustuswm/masquerade:mem
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push augustuswm/masquerade:mem

  redis-build:
    docker:
      - image: clux/muslrust
      - image: redis
    steps:
      - checkout
      - run:
          name: Install dockerize
          command: |
            apt-get update
            apt-get install -y wget
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run:
          name: Test
          command: cargo test --features redis-backend
      - run:
          name: Build
          command: |
            cargo build --release --features redis-backend
            echo $CIRCLE_SHA1 > .circle-sha
      - run:
          name: Install Node
          command: |
            curl -sL https://deb.nodesource.com/setup_10.x | bash -
            apt-get install -y nodejs
      - run:
          name: Build Frontend
          command: |
            npm install
            npm run build
      - save_cache:
          key: build-{{ .Branch }}-{{ checksum ".circle-sha" }}-redis
          paths:
            - ~/project/www
            - ~/project/target/release
            - ~/project/Dockerfile

  redis-docker:
    docker:
      - image: docker:latest
    steps:
      - run: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          key: build-{{ .Branch }}-{{ checksum ".circle-sha" }}-redis
      - setup_remote_docker
      - run:
          command: |
            docker build -t masquerade .
            docker tag masquerade:latest augustuswm/masquerade:redis
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push augustuswm/masquerade:redis

workflows:
  version: 2
  build:
    jobs:
      - mem-build
      - mem-docker:
          requires:
            - mem-build
          filters:
            branches:
              only:
                - master
      - redis-build
      - redis-docker:
          requires:
            - redis-build
          filters:
            branches:
              only:
                - master